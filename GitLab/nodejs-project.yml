image: node

stages:
- build
- test
- sonarqube
- pacakge
- deploy

build-job:
  stage: build
  script:
  - npm install

test-job:
  stage: test
  script:
  - npm install
  - npm test

sast:
  stage: test
include:
- template: Jobs/SAST.gitlab-ci.yml

sonarqube-check:
  stage: sonarqube
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
    - .sonar/cache
  script:
  - sonar-scanner
  allow_failure: true
  rules:
  - if: $CI_COMMIT_BRANCH == 'main'

package-docker:
  stage: package
  image: docker:20.10.16
  services:
  - docker:20.10.16-dind # docker inside docker
  before_script:
  - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
  script:
  - docker build -t lowyiiii/nodejs-project:latest .
  - docker push lowyiiii/nodejs-project:latest

deploy-job:
  stage: deploy
  image:
    name: amazon/aws-cli
    entrypoint: [ "" ]
  before_script:
  - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.30.2/2024-07-12/bin/linux/amd64/kubectl
  - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.30.2/2024-07-12/bin/linux/amd64/kubectl.sha256
  - sha256sum -c kubectl.sha256
  - chmod +x ./kubectl
  - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/ && export PATH=$HOME/bin:$PATH
  - echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
  script:
  - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
  - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
  - aws configure set default_region $AWS_DEFAULT_REGION
  - aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name nodejs-cluster
  - kubectl apply -f Application.yaml
  - kubectl get pods
