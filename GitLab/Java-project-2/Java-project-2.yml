stages:
- build
- test
- package
- docker-stage
- deploy

build-job:
  stage: build
  image: maven:latest
  script:
  - mvn clean package
  artifacts:
    name: war-project
    paths:
    - target/my-webapp.war

test-job:
  stage: test
  image: maven:latest
  script:
  - mvn test
  artifacts:
    reports:
      junit:
      - target/surefire-reports/TEST-com.example.MyServletTest-junit.xml
      - target/surefire-reports/TEST-com.example.AppTest-junit.xml

sast:
  stage: test
include:
- template: Jobs/SAST.gitlab-ci.yml

package-job:
  stage: package
  image: maven:latest
  script:
  - mvn deploy -s settings.xml

docker-job:
  stage: docker-stage
  image: docker:20.10.16
  services:
  - docker:20.10.16-dind
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.gitlab.com
  script:
  - docker build -t registry.gitlab.com/lowyiiii/java-project .
  - docker push registry.gitlab.com/lowyiiii/java-project

deploy-job:
  stage: deploy
  image:
    name: amazon/aws-cli
    entrypoint: [ "" ]
  before_script:
  - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.30.2/2024-07-12/bin/linux/amd64/kubectl
  - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.30.2/2024-07-12/bin/linux/amd64/kubectl.sha256
  - sha256sum -c kubectl.sha256
  - chmod +x ./kubectl
  - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
  - echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
  script:
  - aws configure set aws_access_key $AWS_ACCESS_KEY_ID
  - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
  - aws configure set default_region $AWS_DEFAULT_REGION
  - kubectl config use-context "$KUBE_CONTEXT"
  - kubectl apply -f Application.yaml
